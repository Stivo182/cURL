#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем КонтекстЯдра;
Перем Ожидаем;
Перем ПарсерКоманднойСтроки;
Перем CURL;

#КонецОбласти

#Область ПрограммныйИнтерфейс

Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
	ПарсерКоманднойСтроки = КонтекстЯдра.Плагин("ПарсерКоманднойСтроки");
	
	НайтиИПодключитьCURL();
		
КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов, КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	
	НаборТестов.Добавить("ТестДолженВыполнить_GET");  
	НаборТестов.Добавить("ТестДолженВыполнить_GETСЗаголовками");  
	НаборТестов.Добавить("ТестДолженВыполнить_POST_БезТела");  
	НаборТестов.Добавить("ТестДолженВыполнить_POST_ТелоТекст");  
	НаборТестов.Добавить("ТестДолженВыполнить_POST_ТелоСтруктура");  
	НаборТестов.Добавить("ТестДолженВыполнить_POST_ТелоСоответствие");  
	НаборТестов.Добавить("ТестДолженВыполнить_POST_ТелоДвоичныеДанные");  
	НаборТестов.Добавить("ТестДолженВыполнить_POST_ТелоФайл");  
	НаборТестов.Добавить("ТестДолженВыполнить_POST_ТелоДвоичныеДанныеВоВременномХранилище"); 
	
КонецПроцедуры

Процедура ПередЗапускомТеста() Экспорт
		
	CURL = ВнешниеОбработки.Создать("cURL");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ТестДолженВыполнить_GET() Экспорт
	
	CURL.GET("https://connectorhttp.ru/get");
	
	Ожидаем.Что(CURL.КодСостояния()).Равно(200);
	
КонецПроцедуры

Процедура ТестДолженВыполнить_GETСЗаголовками() Экспорт
	
	Агент = "1C:Enterprise";
	Ответ = CURL.УстановитьЗаголовок("User-Agent", Агент)
				.GET("https://connectorhttp.ru/get")
				.ОтветКакJson();
	
	Ожидаем.Что(Ответ["headers"]["User-Agent"]).Равно(Агент);
	
КонецПроцедуры

Процедура ТестДолженВыполнить_POST_БезТела() Экспорт
	
	CURL.POST("https://connectorhttp.ru/post");
	
	Ожидаем.Что(CURL.КодСостояния()).Равно(200);
	
КонецПроцедуры

Процедура ТестДолженВыполнить_POST_ТелоТекст() Экспорт
	
	Ответ = CURL.POST("https://connectorhttp.ru/post", "name=blink&id=182").ОтветКакJson();
	
	Ожидаем
		.Что(Ответ["form"]["name"]).Равно("blink")
		.Что(Ответ["form"]["id"]).Равно("182");
	
КонецПроцедуры

Процедура ТестДолженВыполнить_POST_ТелоСтруктура() Экспорт
	
	Тело = Новый Структура();
	Тело.Вставить("Name", "blink");
	Тело.Вставить("Id", 182);
	Тело.Вставить("Bool", Истина);
	Тело.Вставить("Cyrillic", "Йогурт");
	Тело.Вставить("SpecChars", "p=1&p=2");

	Ответ = CURL.POST("https://connectorhttp.ru/post", Тело).ОтветКакJson();
	
	Ожидаем
		.Что(Ответ["form"]["Name"]).Равно("blink")
		.Что(Ответ["form"]["Id"]).Равно("182")
		.Что(Ответ["form"]["Bool"]).Равно("true")
		.Что(Ответ["form"]["Cyrillic"]).Равно("Йогурт")
		.Что(Ответ["form"]["SpecChars"]).Равно("p=1&p=2");
	
КонецПроцедуры

Процедура ТестДолженВыполнить_POST_ТелоСоответствие() Экспорт
	
	Тело = Новый Соответствие();
	Тело.Вставить("Name", "blink");
	Тело.Вставить("Id", 182);
	Тело.Вставить("Bool", Истина);
	Тело.Вставить("Cyrillic", "Йогурт");
	Тело.Вставить("SpecChars", "p=1&p=2");

	Ответ = CURL.POST("https://connectorhttp.ru/post", Тело).ОтветКакJson();
	
	Ожидаем
		.Что(Ответ["form"]["Name"]).Равно("blink")
		.Что(Ответ["form"]["Id"]).Равно("182")
		.Что(Ответ["form"]["Bool"]).Равно("true")
		.Что(Ответ["form"]["Cyrillic"]).Равно("Йогурт")
		.Что(Ответ["form"]["SpecChars"]).Равно("p=1&p=2");
	
КонецПроцедуры

Процедура ТестДолженВыполнить_POST_ТелоДвоичныеДанные() Экспорт
	
	Буфер = Новый БуферДвоичныхДанных(16);
  	Поток = Новый ПотокВПамяти(Буфер); 
	
	Тело = Поток.ЗакрытьИПолучитьДвоичныеДанные();   
	
	Ответ = CURL.POST("https://connectorhttp.ru/post", Тело).ОтветКакJson();
				
	Ожидаем.Что(Ответ["headers"]["Content-Length"]).Равно("16");
	
КонецПроцедуры

Процедура ТестДолженВыполнить_POST_ТелоФайл() Экспорт
	
	Буфер = Новый БуферДвоичныхДанных(16);
  	ДвоичныеДанные = ПолучитьДвоичныеДанныеИзБуфераДвоичныхДанных(Буфер);
	
	ПутьКФайлу = ПолучитьИмяВременногоФайла();
	ДвоичныеДанные.Записать(ПутьКФайлу);
	
  	Файл = Новый Файл(ПутьКФайлу);
	
	Попытка
		Ответ = CURL.POST("https://connectorhttp.ru/post", Файл).ОтветКакJson();
	Исключение
		УдалитьФайлы(ПутьКФайлу);	
		ВызватьИсключение ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	УдалитьФайлы(ПутьКФайлу);
				
	Ожидаем.Что(Ответ["headers"]["Content-Length"]).Равно("16");
	
КонецПроцедуры

Процедура ТестДолженВыполнить_POST_ТелоДвоичныеДанныеВоВременномХранилище() Экспорт
	
	Буфер = Новый БуферДвоичныхДанных(16);
  	ДвоичныеДанные = ПолучитьДвоичныеДанныеИзБуфераДвоичныхДанных(Буфер);
  	
  	Адрес = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
	
	Ответ = CURL.POST("https://connectorhttp.ru/post", Адрес).ОтветКакJson();
				
	Ожидаем.Что(Ответ["headers"]["Content-Length"]).Равно("16");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура НайтиИПодключитьCURL()
	
	Файл = Новый Файл(ИспользуемоеИмяФайла);
	ПутьККаталогу = Файл.Путь;
	
	Файлы = НайтиФайлы(ПутьККаталогу, "cURL.epf");
	Если Файлы.Количество() = 0 Тогда
		ВызватьИсключение "Не найден файл cURL.epf в каталоге с тестами";
	КонецЕсли;
	
	ВнешниеОбработки.Создать(Файлы[0].ПолноеИмя, Ложь);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
